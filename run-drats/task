#!/bin/bash
set -eu -o pipefail
set -x

: "${SSH_DESTINATION_CIDR:="10.0.0.0/8"}"

ENVIRONMENT="${ENVIRONMENT:?"ENVIRONMENT not set"}"

export GOPATH="${PWD}"
export PATH="${PATH}:${GOPATH}/bin"

CF_VARS_STORE_PATH="$PWD/deployments-routing/${ENVIRONMENT}/deployment-vars.yml"
export CF_VARS_STORE_PATH

BBL_STATE="$PWD/deployments-routing/${ENVIRONMENT}/bbl-state"

pushd bbr-binary-release
  tar xvf ./*.tar
  build_path="$(pwd)/releases/bbr"
  export BBR_BUILD_PATH=${build_path}
popd

rm -f ~/.gitconfig

pushd "$BBL_STATE"
  bbl version
  eval "$(bbl print-env)"
	cleanup() {
		pkill ssh$
	}
	trap 'cleanup' EXIT

	export BOSH_CLI_NAME=bosh
	export SKIP_SUITE_NAME=""

  CF_ADMIN_PASSWORD="$(${BOSH_CLI_NAME} interpolate --path /cf_admin_password ${CF_VARS_STORE_PATH})"
  export CF_ADMIN_PASSWORD
  export BOSH_GW_USER="jumpbox"
  BOSH_GW_HOST="$(bbl jumpbox-address)"
  export BOSH_GW_HOST
  BOSH_GW_PRIVATE_KEY_CONTENTS="$(bbl ssh-key)"
  export BOSH_GW_PRIVATE_KEY_CONTENTS
  CF_DOMAIN=$(jq .lb.domain bbl-state.json -r)
  export CF_API_URL="https://api.${CF_DOMAIN}"
  if grep "nfs-broker-password" ${CF_VARS_STORE_PATH}>/dev/null; then
      export NFS_SERVICE_NAME="nfs"
      export NFS_PLAN_NAME="Existing"
      export NFS_BROKER_USER="nfs-broker"
      export NFS_BROKER_PASSWORD=$(${BOSH_CLI_NAME} interpolate --path /nfs-broker-password ${CF_VARS_STORE_PATH})
      export NFS_BROKER_URL="http://nfs-broker.${CF_DOMAIN}"
  else
      echo "Skipping cf-nfsrboker testcase because nfs-broker-password is not present in ${CF_VARS_STORE_PATH}"
      if [ -z ${SKIP_SUITE_NAME} ]; then
          export SKIP_SUITE_NAME="cf-nfsbroker"
      else
          export SKIP_SUITE_NAME="(${SKIP_SUITE_NAME})|cf-nfsbroker"
      fi
  fi
popd

echo "Running DRATs"
cd src/github.com/cloudfoundry-incubator/disaster-recovery-acceptance-tests
./scripts/run_acceptance_tests_local.sh
