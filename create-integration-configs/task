#!/bin/bash

set -eu -o pipefail

if [ ! -f "${DEPLOYMENT_DIR}/cats_integration_config.json" ]; then
  echo "Output: ${DEPLOYMENT_DIR}/cats_integration_config.json"
  cat > "${DEPLOYMENT_DIR}/cats_integration_config.json" <<EOF
{
  "api": "api.${SYSTEM_DOMAIN}",
  "admin_user": "admin",
  "admin_password": "REPLACE ME",
  "apps_domain": "${SYSTEM_DOMAIN}",
  "artifacts_directory": "logs",
  "skip_ssl_validation": true,
  "use_http": true,
  "backend": "diego",
  "include_apps": true,
  "include_backend_compatibility": false,
  "include_detect": true,
  "include_docker": false,
  "include_ssh": false,
  "include_internet_dependent": true,
  "include_privileged_container_support": false,
  "include_route_services": true,
  "include_routing": true,
  "include_security_groups": true,
  "include_services": true,
  "include_sso": false,
  "include_tasks": false,
  "include_v3": false,
  "include_zipkin": true
}
EOF
fi

if [ ! -f "${DEPLOYMENT_DIR}/rats_integration_config.json" ]; then
  echo "Output: ${DEPLOYMENT_DIR}/rats_integration_config.json"
  cat > "${DEPLOYMENT_DIR}/rats_integration_config.json" <<EOF
{
  "addresses": [
    "tcp.${SYSTEM_DOMAIN}"
  ],
  "api": "api.${SYSTEM_DOMAIN}",
  "admin_user": "admin",
  "admin_password": "REPLACE ME",
  "skip_ssl_validation": true,
  "use_http": true,
  "apps_domain": "${SYSTEM_DOMAIN}",
  "include_http_routes": true,
  "default_timeout": 120,
  "cf_push_timeout": 120,
  "tcp_router_group": "default-tcp",
  "oauth": {
    "token_endpoint": "https://uaa.${SYSTEM_DOMAIN}",
    "client_name": "routing_api_client",
    "client_secret": "REPLACE ME",
    "port": 443,
    "skip_ssl_validation": true
  }
}
EOF
fi
