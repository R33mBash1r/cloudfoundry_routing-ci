#!/bin/bash
set -ex

# Cannot set -u before sourcing .bashrc because of all
# the unbound variables in things beyond our control.
source ~/.bashrc

set -u

root_dir=${PWD}

# Inputs
BOSH_LITE_IP_DIR="${root_dir}/${BOSH_LITE_IP_DIR:?"\$BOSH_LITE_IP_DIR not set"}"
ROUTING_RELEASE_DIR="${root_dir}/${ROUTING_RELEASE_DIR:?"\$ROUTING_RELEASE_DIR not set"}"
ROUTING_RELEASE_TARBALL_DIR="${root_dir}/${ROUTING_RELEASE_TARBALL_DIR:?"\$ROUTING_RELEASE_TARBALL_DIR not set"}"
CF_RELEASE_MANIFEST="${root_dir}/${CF_RELEASE_MANIFEST:?"\$CF_RELEASE_MANIFEST not set"}"

configure() {
  export BOSH_LITE_IP="$(cat "${BOSH_LITE_IP_DIR}/bosh-lite-ip")"
}

log_in_to_bosh_lite() {
  set +e
  local bosh_password=$1
  n=0
  while [ true ]
  do
    # The bosh director may not yet be available
    bosh -n target "${BOSH_LITE_IP}" && break
    n=$[$n+1]
    if [ $n ge 5 ]
    then
      exit 1
    fi
    sleep 15
  done
  set -e
  bosh login admin ${bosh_password}
}

build_manifest() {
  pushd "${ROUTING_RELEASE_DIR}" > /dev/null

    bosh -n download manifest cf-warden > /tmp/cf.yml
    bosh -n download manifest cf-warden-diego > /tmp/diego.yml

    scripts/generate-manifest -c /tmp/cf.yml -d /tmp/diego.yml  -l bosh-lite/stubs/iaas-settings.yml,bosh-lite/stubs/property-overrides.yml,bosh-lite/stubs/instance-count-overrides.yml,bosh-lite/stubs/persistent-disk-overrides.yml > routing.yml

  popd > /dev/null
  ROUTING_RELEASE_MANIFEST="${ROUTING_RELEASE_DIR}/routing.yml"
}

create_and_deploy_release() {
    bosh -n upload release --skip-if-exists "${ROUTING_RELEASE_TARBALL_DIR}"/*.tgz
    bosh -n -d "${ROUTING_RELEASE_MANIFEST}" deploy
}

enable_routing_api_in_cf() {
  pushd "${ROUTING_RELEASE_DIR}" > /dev/null
    ./scripts/update-cf $CF_RELEASE_MANIFEST
    echo "Successfully redeployed cf release"
  popd > /dev/null
}

main() {
  configure
  log_in_to_bosh_lite ${BOSH_ADMIN_PASSWORD}
  build_manifest
  create_and_deploy_release
  echo "Successfully deployed routing release"

  enable_routing_api_in_cf

  # Wait a bit to allow API vm to register its route
  sleep 15

  echo "Running routing acceptance tests"
  bosh -d "${ROUTING_RELEASE_MANIFEST}" run errand routing_acceptance_tests --keep-alive --download-logs

  echo "Running routing smoke tests"
  bosh -d "${ROUTING_RELEASE_MANIFEST}" run errand routing_smoke_tests --keep-alive --download-logs

  bosh cleanup
}

main
