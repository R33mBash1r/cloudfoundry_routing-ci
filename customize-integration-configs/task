#!/bin/bash -eu
set -o pipefail

function check_fast_fails() {
  if [ -z "$VARS_STORE_FILE" ]; then
    echo "VARS_STORE_FILE has not been set"
    exit 1
  fi

  if [ ! -f "integration-configs/$RATS_INTEGRATION_CONFIG_FILE" ]; then
    echo "rats_integration_config file is not present...Exiting"
    exit 1
  fi
}


function main() {
  local root_dir
  root_dir="${1}"

  check_fast_fails

  if [ -f "integration-configs/${RATS_INTEGRATION_CONFIG_FILE}" ]; then
    echo "updating RATs integration config file: ${RATS_INTEGRATION_CONFIG_FILE}..."

    local rats_client_cert
    local rats_client_key
    rats_client_cert=$(bosh int "${root_dir}/vars-store/${VARS_STORE_FILE}" --path=/rats_tls_client/certificate)
    rats_client_key=$(bosh int "${root_dir}/vars-store/${VARS_STORE_FILE}" --path=/rats_tls_client/private_key)

    local new_rats_integration_config
    new_rats_integration_config=$(cat "integration-configs/${RATS_INTEGRATION_CONFIG_FILE}")
    new_rats_integration_config=$(echo ${new_rats_integration_config} | jq ".xfcc.client_pem=\"${rats_client_cert}\n${rats_client_key}\"")

    echo "${new_rats_integration_config}" > "integration-configs/${RATS_INTEGRATION_CONFIG_FILE}"
  fi

  cp -rT integration-configs updated-integration-configs
}

main "${PWD}"
