#!/usr/bin/env bash
set -ex

set_username_password() {
  set +x
    local json_output
    json_output=$(credhub get -n /jubilee/cf-user -j)
    CF_USERNAME=$(echo ${json_output} | jq -r .value.username)
    CF_PASSWORD=$(echo ${json_output} | jq -r .value.password)
  set -x
}

CF_API="api.${ENVIRONMENT}.${SYSTEM_DOMAIN}"

if [[ "${CF_SKIP_SSL_VALIDATION}" == 'true' ]];
then
  cf api "${CF_API}" --skip-ssl-validation
else
  cf api "${CF_API}"
fi

ENV_ROOT="${PWD}/deployments-routing/${ENVIRONMENT}"

pushd "${ENV_ROOT}/bbl-state" > /dev/null
  set +ex
    eval "$(bbl print-env)"
    admin_password=$(credhub find -j -n cf_admin_password | jq -r .credentials[].name | xargs credhub get -j -n | jq -r .value)
  set -ex
popd > /dev/null

if [[ -z ${admin_password}  ]]; then
  set +ex
    admin_password=$(bosh interpolate "${ENV_ROOT}/creds.yml" --path=/cf_admin_password)
  set -ex
fi


set +x
  if [[ -z ${CF_USERNAME} && -z ${CF_PASSWORD} ]]; then
    set_username_password
  fi
set -x

set +x
  cf auth "${CF_USERNAME}" "${CF_PASSWORD}"
set -x

cf target -o "${CF_ORG}" -s "${CF_SPACE}"

echo "Cloning doctorroute repo"
git clone https://github.com/cf-routing/doctorroute.git

pushd doctorroute
	TCP_DOMAIN=tcp.${CF_APP_DOMAIN}
	set +e
	  cf domains | grep "${TCP_DOMAIN}"
	  EXIT_STATUS=$?
	set -e
  # If domain does not exist create new tcp domain
	if [[ ${EXIT_STATUS} != "0" ]]; then
	    set +x
	      cf auth "${CF_ADMIN_USER}" "${admin_password}"
	    set -x
	    cf create-shared-domain "${TCP_DOMAIN}" --router-group default-tcp
	fi

	set +e
	  cf apps | grep "${CF_APP_NAME}"
	  EXIT_STATUS=$?
	set -e
  # If app does not exist push and map-route
	if [[ "${EXIT_STATUS}" != "0" ]]; then
	    echo "Pushing doctorroute..."
	    cf target -o "${CF_ORG}" -s "${CF_SPACE}"
	    cf push "${CF_APP_NAME}" -d "${TCP_DOMAIN}" --random-route
	    cf map-route "${CF_APP_NAME}" "${CF_APP_DOMAIN}" -n "${CF_APP_NAME}"
	fi
popd
