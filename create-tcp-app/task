#!/usr/bin/env bash
set -ex

CF_API="api.${ENVIRONMENT}.${SYSTEM_DOMAIN}"

if [ "${CF_SKIP_SSL_VALIDATION}" == 'true' ] ;
then
  cf api "${CF_API}" --skip-ssl-validation
else
  cf api "${CF_API}"
fi

set +x
  cf auth "${CF_USER}" "${CF_PASSWORD}"
set -x

cf target -o "${CF_ORG}" -s "${CF_SPACE}"

echo "Cloning doctorroute repo"
git clone https://github.com/cf-routing/doctorroute.git

pushd doctorroute
	TCP_DOMAIN=tcp.${CF_APP_DOMAIN}
	set +e
	cf domains | grep "${TCP_DOMAIN}"
	EXIT_STATUS=$?
	set -e
  # If domain does not exist create new tcp domain
	if [ ${EXIT_STATUS} != "0" ]; then
	    VARS_STORE="${PWD}/deployments-routing/${ENVIRONMENT}/${VARS_FILE}"
	    set +x
	      admin_password=$(bosh interpolate "${VARS_STORE}" --path=/cf_admin_password)
	      cf auth "${CF_ADMIN_USER}" "${admin_password}"
	    set -x
	    cf create-shared-domain "${TCP_DOMAIN}" --router-group default-tcp
	fi

	set +e
	  cf apps | grep "${CF_APP_NAME}"
	  EXIT_STATUS=$?
	set -e
  # If app does not exist push and map-route
	if [[ "${EXIT_STATUS}" != "0" ]]; then
	    echo "Pushing doctorroute..."
	    cf target -o "${CF_ORG}" -s "${CF_SPACE}"
	    cf push "${CF_APP_NAME}" -d "${TCP_DOMAIN}" --random-route
	    cf map-route "${CF_APP_NAME}" "${CF_APP_DOMAIN}" -n "${CF_APP_NAME}"
	fi
popd
