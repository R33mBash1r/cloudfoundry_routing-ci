#!/bin/bash
set -ex

# Cannot set -u before sourcing .bashrc because of all
# the unbound variables in things beyond our control.
source ~/.bashrc

set -u

root_dir="${PWD}"

# Inputs
ENV_DIR="${root_dir}/${ENV_DIR:?"\$ENV_DIR not set"}"
SUBNET_ID="${SUBNET_ID:?"SUBNET_ID must be provided"}"
SECURITY_GROUP="${SECURITY_GROUP:?"SECURITY_GROUP must be provided"}"
ELASTIC_IP="${ELASTIC_IP:?"ELASTIC_IP must be provided"}"

# Outputs
IP_OUTPUT_DIR="${root_dir}/${IP_OUTPUT_DIR:?"IP_OUTPUT_DIR must be provided"}"
VAGRANT_OUTPUT_DIR="${root_dir}/${VAGRANT_OUTPUT_DIR:?"VAGRANT_OUTPUT_DIR must be provided"}"
BOSH_ADMIN_PASSWORD="${BOSH_ADMIN_PASSWORD:?"BOSH_ADMIN_PASSWORD must be provided"}"

setup_env() {
  NEW_SUBNET_ID="${SUBNET_ID}"
  BOSH_LITE_SECURITY_GROUP="${SECURITY_GROUP}"
  export BOSH_LITE_PRIVATE_KEY="${ENV_DIR}/keypair/id_rsa_bosh"

  source "${ENV_DIR}/aws_environment"
  export BOSH_AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
  export BOSH_AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
  export BOSH_LITE_SECURITY_GROUP=${BOSH_LITE_SECURITY_GROUP}
  export BOSH_LITE_SUBNET_ID=${NEW_SUBNET_ID}
  export BOSH_LITE_KEYPAIR="bosh-lite"
  export BOSH_LITE_ELASTIC_IP="${ELASTIC_IP}"
}

get_bosh_lite_ip() {
  BOSH_LITE_IP="$(vagrant ssh-config 2>/dev/null | grep HostName | awk '{print $2}')"
  echo "${BOSH_LITE_IP}" > "${IP_OUTPUT_DIR}/bosh-lite-ip"
}

get_vagrant_machine() {
  pushd bosh-lite
    tar -czf ${VAGRANT_OUTPUT_DIR}/vagrant.tar.gz .vagrant/
  popd
}

provision_bosh_lite() {
  pushd bosh-lite
    BOSH_LITE_INSTANCE_TYPE="m3.2xlarge" vagrant up --provider=aws
    get_bosh_lite_ip
  popd
}

log_in_to_bosh_lite() {
  set +e
  local bosh_password=$1
  n=0
  while [ true ]
  do
    # The bosh director may not yet be available
    bosh -n target "${BOSH_LITE_IP}" && break
    n=$[$n+1]
    if [ $n ge 5 ]
    then
      exit 1
    fi
    sleep 15
  done
  set -e
  bosh login admin ${bosh_password}
}

change_default_password() {
  log_in_to_bosh_lite admin
  bosh create user admin ${BOSH_ADMIN_PASSWORD}
}

check_if_bosh_lite() {
  aws ec2 describe-instances --filters "Name=tag:Name,Values=${BOSH_LITE_NAME}" \
      "Name=instance-state-name,Values=running" \
      --output text \
      --query 'Reservations[*].Instances[*].NetworkInterfaces[*].PrivateIpAddress' > instanceIPAddress

  if [ -s instanceIPAddress ]
  then
    echo "bosh-lite already running"

    echo "cleaning bosh-lite"
    BOSH_LITE_IP=$(cat instanceIPAddress)
    log_in_to_bosh_lite ${BOSH_ADMIN_PASSWORD}
    bosh cleanup

    cat instanceIPAddress
    cat instanceIPAddress > "${IP_OUTPUT_DIR}/bosh-lite-ip"
    exit 0
  else
    echo "creating a new bosh-lite"
  fi
}

main() {
  setup_env
  check_if_bosh_lite
  provision_bosh_lite
  change_default_password
  get_vagrant_machine
}

main
